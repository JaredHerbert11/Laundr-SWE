{"ast":null,"code":"import React, { useState, useEffect } from 'react'; //When adding or removing one from cart, this function should be called \n//amount is 1 or -1 depending on if the user wishes to add or remove one item from cart\n\nfunction updateItem(item, amount) {\n  let cartCopy = [...cart];\n  let exister = cartCopy.find(it => it.id === item.id); //checks if the given item is in the cart, if not then call the add item function\n\n  if (!exister && amount > 0) {\n    addItem(item);\n  } //if item is not in cart and user wishes to remove from cart, leaves function to do nothing\n\n\n  if (!exister) return; //adjust the quantity of the item\n\n  exister.quantity += amount; //Checks if item quantity has dropped to zero, if so then remove from cart\n\n  if (exister.quantity <= 0) {\n    cartCopy = cartCopy.filter(it => it.id !== item.id);\n  } //If the cart was emptied through removing an item, clear the cart and local storage\n\n\n  if (cartCopy.length === 0) {\n    localStorage.clear();\n    cartCopy = [];\n  }\n\n  setCart(cartCopy);\n}\n\nfunction clearOneItem(item) {\n  let cartCopy = [...cart];\n  cartCopy = cartCopy.filter(thing => thing.id !== item.id);\n\n  if (cartCopy.length === 0) {\n    localStorage.clear();\n    setCart([]);\n  }\n\n  setCart(cartCopy);\n} //If item isn't in cart, push it into the cart\n\n\nfunction addItem(item) {\n  let copyCart = [...cart];\n  item.quantity = 1;\n  copyCart.push(item);\n  setCart(copyCart);\n} //Clears the cart as well as the local storage\n\n\nfunction clearCart() {\n  localStorage.clear();\n  setCart([]);\n}\n\nexport default {\n  updateItem,\n  clearOneItem,\n  clearCart\n};","map":{"version":3,"sources":["C:/Users/asus/Documents/Git/Laundr-SWE/laundr_swe/src/controllers/cartFunctions.js"],"names":["React","useState","useEffect","updateItem","item","amount","cartCopy","cart","exister","find","it","id","addItem","quantity","filter","length","localStorage","clear","setCart","clearOneItem","thing","copyCart","push","clearCart"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAiC;AAE7B,MAAIC,QAAQ,GAAG,CAAC,GAAGC,IAAJ,CAAf;AAEA,MAAIC,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAcC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUP,IAAI,CAACO,EAAnC,CAAd,CAJ6B,CAM7B;;AACA,MAAI,CAACH,OAAD,IAAaH,MAAM,GAAG,CAA1B,EAA6B;AAC3BO,IAAAA,OAAO,CAACR,IAAD,CAAP;AACD,GAT4B,CAW7B;;;AACA,MAAI,CAACI,OAAL,EAAc,OAZe,CAc7B;;AACAA,EAAAA,OAAO,CAACK,QAAR,IAAoBR,MAApB,CAf6B,CAiB7B;;AACA,MAAIG,OAAO,CAACK,QAAR,IAAoB,CAAxB,EAA0B;AACxBP,IAAAA,QAAQ,GAAGA,QAAQ,CAACQ,MAAT,CAAgBJ,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUP,IAAI,CAACO,EAArC,CAAX;AACD,GApB4B,CAsB7B;;;AACA,MAAIL,QAAQ,CAACS,MAAT,KAAoB,CAAxB,EAA0B;AACxBC,IAAAA,YAAY,CAACC,KAAb;AACAX,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAEDY,EAAAA,OAAO,CAACZ,QAAD,CAAP;AAEH;;AAGD,SAASa,YAAT,CAAsBf,IAAtB,EAA2B;AACvB,MAAIE,QAAQ,GAAG,CAAC,GAAGC,IAAJ,CAAf;AAEAD,EAAAA,QAAQ,GAAGA,QAAQ,CAACQ,MAAT,CAAgBM,KAAK,IAAIA,KAAK,CAACT,EAAN,KAAaP,IAAI,CAACO,EAA3C,CAAX;;AAEA,MAAIL,QAAQ,CAACS,MAAT,KAAoB,CAAxB,EAA0B;AACxBC,IAAAA,YAAY,CAACC,KAAb;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAEDA,EAAAA,OAAO,CAACZ,QAAD,CAAP;AACH,C,CAED;;;AACA,SAASM,OAAT,CAAiBR,IAAjB,EAAsB;AAClB,MAAIiB,QAAQ,GAAG,CAAC,GAAGd,IAAJ,CAAf;AAEAH,EAAAA,IAAI,CAACS,QAAL,GAAgB,CAAhB;AACAQ,EAAAA,QAAQ,CAACC,IAAT,CAAclB,IAAd;AACAc,EAAAA,OAAO,CAACG,QAAD,CAAP;AACH,C,CAED;;;AACA,SAASE,SAAT,GAAqB;AACjBP,EAAAA,YAAY,CAACC,KAAb;AACAC,EAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AAED,eAAe;AAACf,EAAAA,UAAD;AAAagB,EAAAA,YAAb;AAA2BI,EAAAA;AAA3B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n//When adding or removing one from cart, this function should be called \r\n//amount is 1 or -1 depending on if the user wishes to add or remove one item from cart\r\nfunction updateItem(item, amount){\r\n\r\n    let cartCopy = [...cart];\r\n\r\n    let exister = cartCopy.find(it => it.id === item.id);\r\n\r\n    //checks if the given item is in the cart, if not then call the add item function\r\n    if (!exister && (amount > 0)){\r\n      addItem(item);\r\n    }\r\n\r\n    //if item is not in cart and user wishes to remove from cart, leaves function to do nothing\r\n    if (!exister) return;\r\n\r\n    //adjust the quantity of the item\r\n    exister.quantity += amount;\r\n\r\n    //Checks if item quantity has dropped to zero, if so then remove from cart\r\n    if (exister.quantity <= 0){\r\n      cartCopy = cartCopy.filter(it => it.id !== item.id);\r\n    }\r\n\r\n    //If the cart was emptied through removing an item, clear the cart and local storage\r\n    if (cartCopy.length === 0){\r\n      localStorage.clear();\r\n      cartCopy = [];\r\n    }\r\n\r\n    setCart(cartCopy);\r\n\r\n}\r\n\r\n\r\nfunction clearOneItem(item){\r\n    let cartCopy = [...cart];\r\n\r\n    cartCopy = cartCopy.filter(thing => thing.id !== item.id);\r\n\r\n    if (cartCopy.length === 0){\r\n      localStorage.clear();\r\n      setCart([]);\r\n    }\r\n\r\n    setCart(cartCopy);\r\n}\r\n\r\n//If item isn't in cart, push it into the cart\r\nfunction addItem(item){\r\n    let copyCart = [...cart];\r\n\r\n    item.quantity = 1;\r\n    copyCart.push(item);\r\n    setCart(copyCart);\r\n}\r\n\r\n//Clears the cart as well as the local storage\r\nfunction clearCart() {\r\n    localStorage.clear();\r\n    setCart([]);\r\n}\r\n\r\nexport default {updateItem, clearOneItem, clearCart};"]},"metadata":{},"sourceType":"module"}