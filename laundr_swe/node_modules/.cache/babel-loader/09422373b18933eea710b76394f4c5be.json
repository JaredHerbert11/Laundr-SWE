{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\Git\\\\Laundr-SWE\\\\laundr_swe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { clearCart } from './controllers/cartFunctions';\nimport { clearOneItem } from './controllers/cartFunctions';\nimport { updateItem } from './controllers/cartFunctions';\nimport './App.css';\nlet Scuba = {\n  id: \"Scuba\",\n  quantity: 0\n};\nlet Tuba = {\n  id: \"Tuba\",\n  quantity: 0\n};\nlet Cuba = {\n  id: \"Cuba\",\n  quantity: 0\n};\n\nfunction App() {\n  _s();\n\n  //Cart state\n  let [cart, setCart] = useState([]); //useEffect that runs whenever cart is changed\n\n  useEffect(() => {\n    //If the cart has been changed, and useEffect is called, update the local storage to match the cart\n    if (cart.length > 0) {\n      let stringCart = JSON.stringify(cart);\n      localStorage.setItem(\"cart\", stringCart);\n    } //If the cart is empty and local storage is not, then update cart to match local storage\n    else if (localStorage.getItem(\"cart\") !== \"undefined\" && localStorage.getItem(\"cart\") !== null) {\n        let localStorageCart = localStorage.getItem(\"cart\");\n        let localStorageArray = JSON.parse(localStorageCart);\n        setCart(localStorageArray);\n      }\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Cart Demo \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" The cart will be remembered by your browser, you can refresh the page or even close + reopen your browser and the cart will be remembered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItem(cart, setCart, Scuba, 1),\n          children: \" Add a Scuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItem(cart, setCart, Scuba, -1),\n          children: \" Remove a Scuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearOneItem(cart, setCart, Scuba),\n          children: \" Clear all Scuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItem(cart, setCart, Tuba, 1),\n          children: \" Add a Tuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItem(cart, setCart, Tuba, -1),\n          children: \" Remove a Tuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearOneItem(cart, setCart, Tuba),\n          children: \" Clear all Tuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItem(cart, setCart, Cuba, 1),\n          children: \" Add a Cuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItem(cart, setCart, Cuba, -1),\n          children: \" Remove a Cuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearOneItem(cart, setCart, Cuba),\n          children: \" Clear all Cuba \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearCart(cart, setCart),\n          children: \" Clear Cart \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", JSON.stringify(cart), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/asus/Documents/Git/Laundr-SWE/laundr_swe/src/App.js"],"names":["React","useState","useEffect","clearCart","clearOneItem","updateItem","Scuba","id","quantity","Tuba","Cuba","App","cart","setCart","length","stringCart","JSON","stringify","localStorage","setItem","getItem","localStorageCart","localStorageArray","parse"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {clearCart} from './controllers/cartFunctions'\r\nimport {clearOneItem} from './controllers/cartFunctions'\r\nimport {updateItem} from './controllers/cartFunctions'\r\n\r\nimport './App.css';\r\n\r\nlet Scuba = {\r\n  id : \"Scuba\",\r\n  quantity : 0\r\n}\r\n\r\nlet Tuba = {\r\n  id : \"Tuba\",\r\n  quantity : 0\r\n}\r\n\r\nlet Cuba = {\r\n  id : \"Cuba\",\r\n  quantity : 0\r\n}\r\n\r\nfunction App() {\r\n  //Cart state\r\n  let [cart, setCart] = useState([]);\r\n\r\n  //useEffect that runs whenever cart is changed\r\n  useEffect(() => {\r\n    //If the cart has been changed, and useEffect is called, update the local storage to match the cart\r\n    if (cart.length > 0){\r\n      let stringCart = JSON.stringify(cart);\r\n      localStorage.setItem(\"cart\", stringCart);\r\n    }\r\n\r\n    //If the cart is empty and local storage is not, then update cart to match local storage\r\n    else if (localStorage.getItem(\"cart\") !== \"undefined\" && localStorage.getItem(\"cart\") !== null){\r\n      let localStorageCart = localStorage.getItem(\"cart\");\r\n      let localStorageArray = JSON.parse(localStorageCart);\r\n      setCart(localStorageArray);\r\n    }\r\n  }, [cart])\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1> Cart Demo </h1>\r\n        <p> The cart will be remembered by your browser, you can refresh the page or even close + reopen\r\n            your browser and the cart will be remembered\r\n        </p>\r\n\r\n        <div>\r\n          <button onClick={() => updateItem(cart, setCart, Scuba, 1)}> Add a Scuba </button>\r\n          <button onClick={() => updateItem(cart, setCart, Scuba, -1)}> Remove a Scuba </button>\r\n          <button onClick={() => clearOneItem(cart, setCart, Scuba)}> Clear all Scuba </button>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={() => updateItem(cart, setCart, Tuba, 1)}> Add a Tuba </button>\r\n          <button onClick={() => updateItem(cart, setCart, Tuba, -1)}> Remove a Tuba </button>\r\n          <button onClick={() => clearOneItem(cart, setCart, Tuba)}> Clear all Tuba </button>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={() => updateItem(cart, setCart, Cuba, 1)}> Add a Cuba </button>\r\n          <button onClick={() => updateItem(cart, setCart, Cuba, -1)}> Remove a Cuba </button>\r\n          <button onClick={() => clearOneItem(cart, setCart, Cuba)}> Clear all Cuba </button>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={() => clearCart(cart, setCart)}> Clear Cart </button>\r\n        </div>\r\n\r\n      <p> {JSON.stringify(cart)} </p>\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}