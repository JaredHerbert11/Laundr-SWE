{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\Git\\\\Laundr-SWE\\\\laundr_swe\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  //Cart state\n  let [cart, setCart] = useState([]); //UseEffect that runs whenever cart is changed\n\n  useEffect(() => {\n    //If the cart has been changed, and useEffect is called, update the local storage to match the cart\n    if (cart.length > 0) {\n      let stringCart = JSON.stringify(cart);\n      localStorage.setItem(\"cart\", stringCart);\n    } //If the cart is empty and local storage is not, then update cart to match local storage\n    else if (localStorage.getItem(\"cart\") !== \"undefined\" && localStorage.getItem(\"cart\") !== null) {\n        let localStorageCart = localStorage.getItem(\"cart\");\n        let localStorageArray = JSON.parse(localStorageCart);\n        setCart(localStorageArray);\n      }\n  }, [cart]); //When adding or removing one from cart, this function should be called \n  //amount is 1 or -1 depending on if the user wishes to add or remove one item from cart\n\n  function updateItem(item, amount) {\n    console.log(\"Update has been called\");\n    let cartCopy = [...cart];\n    let exister = cartCopy.find(it => it.id === item.id); //checks if the given item is in the cart, if not then call the add item function\n\n    if (!exister && amount > 0) {\n      addItem(item);\n    } //if item is not in cart and user wishes to remove from cart, leaves function to do nothing\n\n\n    if (!exister) return; //adjust the quantity of the item\n\n    exister.quantity += amount; //Checks if item quantity has dropped to zero, if so then remove from cart\n\n    if (exister.quantity <= 0) {\n      cartCopy = cartCopy.filter(it => it.id !== item.id);\n    }\n\n    setCart(cartCopy);\n  } //If item isn't in cart, push it into the cart\n\n\n  function addItem(item) {\n    let copyCart = [...cart];\n    item.quantity = 1;\n    copyCart.push(item);\n    setCart(copyCart);\n  } //Clears the cart as well as the local storage\n\n\n  function clear() {\n    localStorage.clear();\n    setCart([]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Learn React\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/asus/Documents/Git/Laundr-SWE/laundr_swe/src/App.js"],"names":["React","App","cart","setCart","useState","useEffect","length","stringCart","JSON","stringify","localStorage","setItem","getItem","localStorageCart","localStorageArray","parse","updateItem","item","amount","console","log","cartCopy","exister","find","it","id","addItem","quantity","filter","copyCart","push","clear","logo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg'\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  //Cart state\r\n  let [cart, setCart] = useState([]);\r\n\r\n  //UseEffect that runs whenever cart is changed\r\n  useEffect(() => {\r\n    //If the cart has been changed, and useEffect is called, update the local storage to match the cart\r\n    if (cart.length > 0){\r\n      let stringCart = JSON.stringify(cart);\r\n      localStorage.setItem(\"cart\", stringCart);\r\n    }\r\n\r\n    //If the cart is empty and local storage is not, then update cart to match local storage\r\n    else if (localStorage.getItem(\"cart\") !== \"undefined\" && localStorage.getItem(\"cart\") !== null){\r\n      let localStorageCart = localStorage.getItem(\"cart\");\r\n      let localStorageArray = JSON.parse(localStorageCart);\r\n      setCart(localStorageArray);\r\n    }\r\n  }, [cart])\r\n\r\n  //When adding or removing one from cart, this function should be called \r\n  //amount is 1 or -1 depending on if the user wishes to add or remove one item from cart\r\n  function updateItem(item, amount){\r\n    console.log(\"Update has been called\");\r\n    let cartCopy = [...cart];\r\n\r\n    let exister = cartCopy.find(it => it.id === item.id);\r\n\r\n    //checks if the given item is in the cart, if not then call the add item function\r\n    if (!exister && (amount > 0)){\r\n      addItem(item);\r\n    }\r\n\r\n    //if item is not in cart and user wishes to remove from cart, leaves function to do nothing\r\n    if (!exister) return;\r\n\r\n    //adjust the quantity of the item\r\n    exister.quantity += amount;\r\n\r\n    //Checks if item quantity has dropped to zero, if so then remove from cart\r\n    if (exister.quantity <= 0){\r\n      cartCopy = cartCopy.filter(it => it.id !== item.id);\r\n    }\r\n\r\n    setCart(cartCopy);\r\n\r\n  }\r\n\r\n  //If item isn't in cart, push it into the cart\r\n  function addItem(item){\r\n    let copyCart = [...cart];\r\n\r\n    item.quantity = 1;\r\n    copyCart.push(item);\r\n    setCart(copyCart);\r\n  }\r\n\r\n  //Clears the cart as well as the local storage\r\n  function clear() {\r\n    localStorage.clear();\r\n    setCart([]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}